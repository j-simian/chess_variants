import React, { useState, MouseEvent } from 'react';

import Board, { BoardSquare, Position, Empty } from "../../logic/boards/Board";
import StandardBoard from "../../logic/boards/StandardBoard";
import { BoardContainer, BoardRow } from "./BoardView.styles";
import BoardCell from "./BoardCell";
import { PieceStyled } from "./BoardCell.styles";

const BoardView = () => {
	let board: Board = new StandardBoard();
	let cells = [];
	let [ selectedPiece, setSelectedPiece ] = useState<Position>({ x: -1, y: -1 });


	function selectPiece(pos: Position) {
		setSelectedPiece(pos);
	}

	let testPath = board.getPath({x: 5, y: 6}, {x: 5, y: 4});
	testPath.shift();

	for (let ii = 0; ii < board.sizeX; ii++) {
		let rowCells = [];
		for (let jj = 0; jj < board.sizeY; jj++) {
			let currPos = { x: jj, y: ii }
			rowCells.push(<BoardCell 
					colour={ (jj+ii) % 2 } 
					pos={ currPos }
					board={ board }
					onSelect={ selectPiece }
					highlight={  
					testPath.some( (a: Position) => (a.x == currPos.x && a.y == currPos.y) )}
					// 	board.getPiece(selectedPiece).type != Empty.InvalidSquare && 
					// 		board.isMovePossible(selectedPiece, currPos) }
			/>);	
			// board.getPiece({ x: ii, y: jj });
		}	
		let row = <BoardRow>{rowCells}</BoardRow>;
		cells.push(row);
	}

	return (
		<BoardContainer>
			{ cells }
		</BoardContainer>
	);
};

export default BoardView;
